for name in names(site){
TotalIndexes = append(TotalIndexes,rep(names,site[[name]]))
}
}
return TotalIndexes
}
CreateTotals<-function(sites){
TotalIndexes = NULL
for(site in sites){
for name in names(site){
TotalIndexes = append(TotalIndexes,rep(name,site[[name]]))
}
}
return TotalIndexes
}
CreateTotals<-function(sites){
TotalIndexes = NULL
for(site in sites){
for(name in names(site)){
TotalIndexes = append(TotalIndexes,rep(name,site[[name]]))
}
}
return TotalIndexes
}
CreateTotals<-function(sites){
TotalIndexes = NULL
for(site in sites){
for(name in names(site)){
TotalIndexes = append(TotalIndexes,rep(name,site[[name]]))
}
}
return TotalIndexes}
CreateTotals<-function(sites){
TotalIndexes = NULL
for(site in sites){
for(name in names(site)){
TotalIndexes = append(TotalIndexes,rep(name,site[[name]]))
}
}
return(TotalIndexes)
}
T <- CreateTotals(c(X,Y))
T
names(X)
X[[names[X][1]]]
names[X][1]
names[X]
X[[names(X)[1]]]
rep(names(X)[1],X[[names(X)[1]]])
TotalIndexes = append(TotalIndexes,rep(names(X)[1],X[[names(X)[1]]]))
TotalIndexes
CreateTotals<-function(sites){
TotalIndexes = NULL
for(site in sites){
for(name in names(site)){
print(name)
TotalIndexes = append(TotalIndexes,rep(name,site[[name]]))
}
}
return(TotalIndexes)
}
T <- CreateTotals(c(X,Y))
T
for(site in sites){}
sites = c(X,Y)
for(site in sites){}
for(site in sites){ print(site)}
sites
length(sites)
sites = list(X,Y)
sites
len(sites)
length(sites)
T <- CreateTotals(sites)
T
len(T)
length(T)
specnumber(X)
sum = 0
for(i in X){sum <- sum+i}
sum
sites[1]
sum(X)
?sample
T
Y = sample(T,length(T))
Y
Y[1:400]
class(T)
T
T(c(3,4,5))
T[c(3,4,5)]
as.dataframe(T)
as.dataFrame(T)
as.DataFrame(T)
as.data.frame(T)
129
129*1.12
library(MASS)
library(ISLR)
?Boston
names(Boston)
plot(medv~lstat,Boston)
fit1
summary(fit1)
abline(fit1,col='red')
names(fit1)
confint(fit1)
predict(fit1,data.frame(lstat=c(5,10,15)),interval='confidence')
summary(fit2)
dv~.,Boston)
summary(fit3
fit3 = lm(medv~.,Boston)
fit3 = lm(medv~.,Boston)
summary(fit3)
par(mfrow=c(2,2))
plot(fit3)
fit4=update(fit3,~.-age-indus)
summary(fit4)
fit5=lm(medv~lstat*age,Boston)
summary(fit5)
fit6=lm(medv~lstat+I(lstat^2),Boston); summary(fit6)
attach(Boston)
parm(mfrow=c(1,1))
plot(medv~lstat)
par(mfrow=c(1,1))
plot(medv~lstat)
points(lstat,fitted(fit6),col='red',pch=20)
points(lstat,fitted(fit6),col='red')
points(lstat,fitted(fit6),col='red',pch=20)
fit7 = lm(medv~poly(lstat,4))
points(lstat,fitted(fit7),col='blue',pch=20)
plot(1:20,1:20,pch=1:20,cex=2)
fix(Carseats)
summary(carseats)
summary(Carseats)
names(Carseats)
fit1=lm(Sales~.+Income:Advertising+Age:Price,Carseats)
summary(fit1)
constrasts(Carseats$ShelveLoc)
contrasts(Carseats$ShelveLoc)
regplot=function(x,y){
fit=lm(x~y)
plot(x,y)
abline(fit,col="red")
}
attach(Carseats)
regplot(price,sales)
regplot(Price,Sales)
regplot=function(x,y){
fit=lm(y~x)
plot(x,y)
abline(fit,col="red")
}
attach(Carseats)
regplot(Price,Sales)
###Wrinting R functions
regplot=function(x,y){
fit=lm(y~x)
plot(x,y)
abline(fit,col="red")
}
#attach(Carseats)
regplot(Price,Sales)
regplot=function(x,y,...){
fit=lm(y~x)
plot(x,y,...)
abline(fit,col="red")
}
regplot(Price,Sales,xlab="Price",ylab="Sales",col="blue",pch=20)
Fit2=lm(medv~I(lstat*age),Boston)
summary(Fit2)
getwd()
setwd("C:\\Users\\Carlos\\Documents\\Statistics\\The analytics edge\\week1")
getwd()
USDA <- read.csv('USDA.csv')
str(USDA)
summary(USDA)
?identify
names(USDA)
Description[which.max(USDA$Sodium)]
USDA$Description[which.max(USDA$Sodium)]
HighSodium<- subset(USDA,Sodium>10000)
nrow(HighSodium)
HighSodium$Description
match("CAVIAR",USDA$Description)
USDA$Sodium[CaviarIndex]
CaviarIndex<-match("CAVIAR",USDA$Description)
USDA$Sodium[CaviarIndex]
?match
sd(USDA$Sodium)
sd(USDA$Sodium,na.rm=TRUE)
mean(USDA$Sodium)
mean(USDA$Sodium,na.rm=TRUE)
sd(USDA$Sodium,na.rm=TRUE)
plot(USDA$Protein,USDA$TotalFat)
plot(USDA$Protein,USDA$TotalFat,xlab="Protein",ylab='Fat',main ='Protein vs Fat',col='red')
hist(USDA$VitaminC,xlab='Vitamin C(mg)',main = 'Histogram of Vitamin C Levels')
hist(USDA$VitaminC,xlab='Vitamin C(mg)',main = 'Histogram of Vitamin C Levels',xlim=c(0,100))
hist(USDA$VitaminC,xlab='Vitamin C(mg)',main = 'Histogram of Vitamin C Levels',xlim=c(0,100),breaks=100)
max(c[3,4])
max(c(3,4))
max(USDA$VitaminC)
max(USDA$VitaminC,na.rm=TRUE)
hist(USDA$VitaminC,xlab='Vitamin C(mg)',main = 'Histogram of Vitamin C Levels',xlim=c(0,100),breaks=2400)
summary(USDA$VitaminC)
?hist
boxplot(USDA$Sugar)
boxplot(USDA$Sugar,main = "Box plot of sugar levels",ylabel = "Sugar(g)")
boxplot(USDA$Sugar,main = "Box plot of sugar levels",ylab = "Sugar(g)")
USDA$Sodium[15] > mean(USDA$Sodium,na.rm=TRUE)
USDA$Sodium[50] > mean(USDA$Sodium,na.rm=TRUE)
HighSodium <- USDA$Sodium[:] > mean(USDA$Sodium,na.rm=TRUE)
HighSodium <- USDA$Sodium > mean(USDA$Sodium,na.rm=TRUE)
str(HighSodium)
HighSodium <- as.numeric(USDA$Sodium > mean(USDA$Sodium,na.rm=TRUE))
str(HighSodium)
USDA$HighSodium <- HighSodium
str(USDA)
USDA$HighProtein <-as.numeric(USDA$Protein > mean(USDA$Protein,na.rm=TRUE))
USDA$HighTotalFat <-as.numeric(USDA$TotalFat > mean(USDA$TotalFat,na.rm=TRUE))
USDA$Carbohydrate <-as.numeric(USDA$Carbohydrate > mean(USDA$Carbohydrate,na.rm=TRUE))
table(USDA$HighSodium)
table(USDA$HighSodium,USDA$HighTotalFat)
table(USDA$HighProtein,USDA$HighTotalFat)
tapply(USDA$Sodium,USDA$HighProtein,mean,na.rm=TRUE)
tapply(USDA$VitaminC,USDA$Carbohydrate,mean,na.rm=TRUE)
tapply(USDA$VitaminC,USDA$Carbohydrate,max,na.rm=TRUE)
tapply(USDA$VitaminC,USDA$Carbohydrate,summary,na.rm=TRUE)
mvtData<-read.csv('mvtWeek1.csv')
nrows(mvtData)
nrow(mvtData)
str(mvtData)
ncol(mvtData)
max(mvtData$ID)
min(mvtData$Beat)
summary(mvtData$Arrest)
summary(mvtData$Arrest)$TRUE
summary(mvtData$Arrest)[2]
summary(mvtData$Arrest)[3]
subset(mvtData,LocationDescription == 'ALLEY')
nrow(subset(mvtData,LocationDescription == 'ALLEY'))
mvtData$Date[1]
DateConvert = as.Date(strptime(mvtData$Date,"%m/%d/%y %H:%M"))
summary(DateConvert)
mvtData$Month = months(DateConvert)
mvtData$WeekDay = weekdays(DateConvert)
mvtData$Date = DateConvert
names(mvtData)
table(mvtData$Month)
min(table(mvtData$Month))
table(mvtData$WeekDay)
min(table(mvtData$WeekDay))
most(table(mvtData$WeekDay))
max(table(mvtData$WeekDay))
table(mvtData$Month,mvtData$Arrest)
hist(mvt$Date,breaks = 100)
hist(mvtData$Date,breaks = 100)
pdf('Hist.pdf')
hist(mvtData$Date,breaks = 100)
dev.off()
boxplot(mvtData$Date~mvtData$Arrest)
boxplot(Date~Arrest,mvtData)
names(mvtData)
table(mvtData$Year,mvtData$Arrest)
2152/(2152+18517)
table(mvtData$Year,mvtData$Arrest)[1,2]
table(mvtData$Year,mvtData$Arrest)[1,2]/nrow(mvtData)
18517+2152
nrow(mvtData$Year)
nrow(mvtData$Year,na.rm=TRUE)
nrow(mvtData)
1212/(1212+13068)
550/(550+13542)
sort(table(mvtData$LocationDescription))
'a' in c('a','v')
'a' == 'v' | 'c'
'a' %in% c('a','v')
names(sort(table(mvtData$LocationDescription)))
T <- sort(table(mvtData$LocationDescription))
names(T)
names(T)[-5,:]
names(T)[-5:]
names(T)[1:2]
names(T)[-5]
names(T)[72:75,76:]
names(T)[72:75]
names(T)[72]
names(T)[0]
names(T)[1]
names(T)[72]
N <- names(T)
N
N[1]
N[0]
N[75]
names(T)[75]
names(T)[73]
?seq
Top5Names = names(T)[c(73:76,77:)]
Top5Names = names(T)[c(73:76,77:79)]
Top5Names
c(73:76,77:79)
73:76
Top5Names = names(T)[c(73:75,77:78)]
Top5 <- subset(mvtData,LocationDescription %in% Top5Names)
str(Top5)
Top5$LocationDescription = factor(Top5$LocationDescription)
table(Top5$LocationDescription,Top5$Arrest)
249/2059
132/1543
439/1672
1603/13249
table(Top5$LocationDescription,Top5$WeekDay)
IBM <- read.csv('IBMStock.csv')
GE <- read.csv('GEStock.csv')
ProcterGamble <- read.csv('ProcterGambleStock.csv')
CocaCola <- read.csv('CocaColaStock.csv')
Boeing <- read.csv('BoeingStock.csv')
str(Boeing)
IBM$Date <- as.Date(IBM$Date,"%m/%d/%y")
GE$Date <- as.Date(GE$Date, "%m/%d/%y")
CocaCola$Date <- as.Date(CocaCola$Date, "%m/%d/%y")
ProcterGamble$Date <- as.Date(ProcterGamble$Date, "%m/%d/%y")
Boeing$Date <- as.Date(Boeing$Date, "%m/%d/%y")
Years(IBM$Date)
years(IBM$Date)
year(IBM$Date)
??year
?months
str(Boeing)
summary(IBM$Date)
summary(IBM$StockPrice)
summary(IBM$GE)
summary(GE$StockPrice)
summary(CocaCola$StockPrice)
summary(Boeing$StockPrice)
sd(ProcterGamble$StockPrice)
plot(Date,StockPrice,Cocacola)
plot(StockPrice~Date,Cocacola)
plot(StockPrice~Date,CocaCola)
plot(StockPrice~Date,CocaCola,type='l')
lines(StockPrice~Date,ProcterGamble)
lines(StockPrice~Date,ProcterGamble,col='red')
')
lines(StockPrice~Date,ProcterGamble,col='blue')
plot(StockPrice~Date,CocaCola,type='l',col='red')
lines(StockPrice~Date,ProcterGamble,col='blue')
lines(StockPrice~Date,ProcterGamble,col='blue',lty=2)
lines(StockPrice~Date,ProcterGamble,lty=2)
plot(StockPrice~Date,CocaCola,type='l',col='red')
lines(StockPrice~Date,ProcterGamble,lty=2,col='blue')
abline(v=as.Date(c("2000-03-01")),lwd=2)
abline(v=as.Date(c("1983")),lwd=2)
abline(v=as.Date(c("1983-02-01")),lwd=2)
plot(StockPrice~Date,CocaCola,type='l',col='red',ylim=c(0,210),xlim=c(1995,2005))
plot(StockPrice~Date,CocaCola[301:432],type='l',col='red',ylim=c(0,210))
plot(StockPrice~Date,CocaCola[301:432,],type='l',col='red',ylim=c(0,210))
plot(StockPrice~Date,CocaCola[301:432,],type='l',col='red',ylim=c(0,210))
lines(StockPrice~Date,GE[301:432,],col='blue',lty=2)
lines(StockPrice~Date,IBM[301:432,],col='green',lty=3)
lines(StockPrice~Date,ProcterGamble[301:432,],col='yellow',lty=4)
lines(StockPrice~Date,Boeing[301:432,],col='orange',lty=5)
plot(StockPrice~Date,CocaCola[301:432,],type='l',col='red',ylim=c(0,210))
lines(StockPrice~Date,GE[301:432,],col='blue',lty=2)
lines(StockPrice~Date,IBM[301:432,],col='green',lty=3)
lines(StockPrice~Date,ProcterGamble[301:432,],col='orange',lty=4)
lines(StockPrice~Date,Boeing[301:432,],col='purple',lty=5)
abline(v=as.date(c("1997-09-01"),lwd=2)
abline(v=as.date(c("1997-09-01")),lwd=2))
abline(v=as.date(c("1997-09-01")),lwd=2))
abline(v=as.date(c("1997-09-01")),lwd=2)
abline(v=as.Date(c("1997-09-01")),lwd=2)
abline(v=as.Date(c("1997-09-01")),lwd=1)
plot(StockPrice~Date,CocaCola[301:432,],type='l',col='red',ylim=c(0,210))
lines(StockPrice~Date,GE[301:432,],col='blue',lty=2)
lines(StockPrice~Date,IBM[301:432,],col='green',lty=3)
lines(StockPrice~Date,ProcterGamble[301:432,],col='orange',lty=4)
lines(StockPrice~Date,Boeing[301:432,],col='purple',lty=5)
abline(v=as.Date(c("1997-09-01")),lwd=1)
abline(v=as.Date(c("1997-11-30")),lwd=1)
plot(StockPrice~Date,CocaCola[301:432,],type='l',col='red',ylim=c(0,210))
lines(StockPrice~Date,GE[301:432,],col='blue',lty=2)
lines(StockPrice~Date,IBM[301:432,],col='green',lty=3)
lines(StockPrice~Date,ProcterGamble[301:432,],col='orange',lty=4)
lines(StockPrice~Date,Boeing[301:432,],col='purple',lty=5)
abline(v=as.Date(c("1997-09-01")),lwd=1)
abline(v=as.Date(c("1997-11-10")),lwd=1)
tapply(IBM$StockPrice,months(IBM$Date),mean)
class(tapply(IBM$StockPrice,months(IBM$Date),mean))
tapply(IBM$StockPrice,months(IBM$Date),mean)[x>mean(IBM$Date)]
tapply(IBM$StockPrice,months(IBM$Date),mean)[val>mean(IBM$Date)]
x
IBMStockMonths[IBMStockMonths>mean(IBM$StockPrice)]
IBMStockMonths<-tapply(IBM$StockPrice,months(IBM$Date),mean)
IBMStockMonths[IBMStockMonths>mean(IBM$StockPrice)]
tapply(GE$StockPrice,months(GE$Date),mean)
tapply(CocaCola$StockPrice,months(CocaCola$Date),mean)
clear(workspace)
CPS <- read.csv('CPSData.csv')
str(CPS)
summary(CPS)
summary(CPS$Industry)
sort(summary(CPS$Industry))
table(CPS$Industry)
sort(table(CPS$Industry))
sort(table(CPS$Region))
sort(table(CPS$State))
table(CPS$Citizenship)
names(CPS$Citizenship)
levels(CPS$Citizenship)
(116639+7073)/(116639+7073+7590)
table(CPS$Hispanic,CPS$Races)
table(CPS$Hispanic,CPS$Race)
T[T>250]
summary(CPS)
table(CPS$Region,is.na(CPS$Married))
table(CPS$Sex,is.na(CPS$Married))
table(CPS$Age,is.na(CPS$Married))
table(CPS$State,is.na(CPS$MetroAreaCode))
subset(table(CPS$State,is.na(CPS$MetroAreaCode)),FALSE = 0)
subset(table(CPS$State,is.na(CPS$MetroAreaCode)))
subset(table(CPS$State,is.na(CPS$MetroAreaCode)),false=0)
table(CPS$Region,is.na(CPS$MetroAreaCode))
tapply(is.na(CPS$MetroAreaCode),CPS$State),mean)
tapply(is.na(CPS$MetroAreaCode),CPS$State,mean)
tapply(is.na(CPS$MetroAreaCode),CPS$State,mean) > 0.25
0.35>tapply(is.na(CPS$MetroAreaCode),CPS$State,mean) > 0.25
T2<0.32 & T2>0.25
T2 <- tapply(is.na(CPS$MetroAreaCode),CPS$State,mean)
T2<0.32 & T2>0.25
T2
sort(T2)
MetroAreaMap <- read.csv('MetroAreaCodes.csv')
CountryMap <- read.csv('CountryCodes.csv')
rm(T2)
str(CountryMap)
str(MetroAreaMap)
CPS = merge(CPS,MetroAreaMap,by.x="MetroAreaCode",by.y="Code",all.x=TRUE)
str(CPS)
summary(CPS$MetroArea)
max(table(CPS$MetroArea))
sort(table(CPS$MetroArea))
table(CPS$MetroArea)
table(CPS$MetroArea)$Atlanta-Sandy Springs
table(CPS$MetroArea)$"Atlanta-Sandy Springs-Marietta,GA"
sort(table(CPS$MetroArea))
sort(tapply(CPS$Hispanic,CPS$MetroArea,mean))
T <- tapply(CPS$Race == "Asian",CPS$MetroArea,mean)
T[T>=20]
T <- tapply(CPS$Race == "Asian",CPS$MetroArea,mean)
T[T>=0.2]
T <- tapply(CPS$Race == "Asian",CPS$MetroArea,mean)
T
T <- tapply(CPS$Race == "Asian",CPS$MetroArea,mean,na.rm=TRUE)
T[T>=0.2]
na.rm(T[T>=0.2])
length(T[T>=0.2])
length(T[T>=0.2],na.rm=TRUE)
length(T[T>=0.2][!is.na(T)])
T[T>=0.2][!is.na(T)]
T[!is.na(T)]
T <- tapply(CPS$Race == "Asian",CPS$MetroArea,mean,na.rm=TRUE)
T[T>=0.2]
T[!is.na(T)]
T <- tapply(CPS$Race == "Asian",CPS$MetroArea,mean,na.rm=TRUE)
T[T>=0.2]
T <- tapply(CPS$Race == "Asian",CPS$MetroArea,mean,na.rm=TRUE)
T1<-T[T>=0.2]
T1[!is.na(T1)]
length(T1[!is.na(T1)])
T <- tapply(CPS$Race == "Asian",CPS$MetroArea,mean)
T
sum(is.na(T))
tapply(CPS$Education == "No High School diploma",CPS$MetroArea,mean,na.rm=TRUE)
sort(tapply(CPS$Education == "No High School diploma",CPS$MetroArea,mean,na.rm=TRUE))
sort(tapply(CPS$Education == "No High school diploma",CPS$MetroArea,mean,na.rm=TRUE))
sort(tapply(CPS$Education == "No high school diploma",CPS$MetroArea,mean,na.rm=TRUE))
sort(tapply(CPS$Education == "No high school diploma",CPS$MetroArea,mean,na.rm=TRUE))[0]
sort(tapply(CPS$Education == "No high school diploma",CPS$MetroArea,mean,na.rm=TRUE))[1]
str(CountryMap)
CPS = merge(CPS,CountryMap,by.x="CountryofBirthCode",by.y="Code",all.x=TRUE)
CPS = merge(CPS,CountryMap,by.x="CountryOfBirthCode",by.y="Code",all.x=TRUE)
summary(CPS$Country)
sort(table(CPS$Country))
tapply(!CPS$Country=="United States",CPS$MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA",mean,na.rm=TRUE)
1668/(1668+3736)
tapply(CPS$MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA",!CPS$Country=="United States",mean,na.rm=TRUE)
tapply(CPS$MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA",!CPS$Country[!is.na(CPS$Country)]=="United States",mean,na.rm=TRUE)
summary(CPS$Country)
tapply(CPS$MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA",!CPS$Country=="United States",mean,na.rm=TRUE)
tapply(CPS$MetroArea=="New York-Northern New Jersey-Long Island, NY-NJ-PA",CPS$Country=="United States",mean,na.rm=TRUE)
tapply(CPS$MetroArea[!is.na(CPS$Country)]=="New York-Northern New Jersey-Long Island, NY-NJ-PA",CPS$Country[!is.na(CPS$Country)]=="United States",mean,na.rm=TRUE)
tapply(CPS$MetroArea[!is.na(CPS$Country)]=="New York-Northern New Jersey-Long Island, NY-NJ-PA",CPS$Country[!is.na(CPS$Country)]=="United States",mean)
tapply(CPS$MetroArea[!is.na(CPS$Country)]=="New York-Northern New Jersey-Long Island, NY-NJ-PA",CPS$Country[!is.na(CPS$Country)]=="United States",mean,na.rm=TRUE)
length(CPS$MetroArea[!is.na(CPS$Country)])
length(CPS$MetroArea)
table(CPS$MetroArea,CPS$Country)
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA",CPS$Country)
table(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA",CPS$Country!="United States")
tapply(CPS$MetroArea[!is.na(CPS$Country)]=="New York-Northern New Jersey-Long Island, NY-NJ-PA",CPS$Country[!is.na(CPS$Country)]=="United States",mean,na.rm=TRUE)
tapply(CPS$MetroArea[!is.na(CPS$Country)]=="New York-Northern New Jersey-Long Island, NY-NJ-PA",CPS$Country[!is.na(CPS$Country)]!="United States",mean,na.rm=TRUE)
1668/(1668+12744)
tapply(!CPS$Country=="India",CPS$MetroArea,sum,na.rm=TRUE)
sort(tapply(!CPS$Country=="India",CPS$MetroArea,sum,na.rm=TRUE))
sort(tapply(!CPS$Country=="Brazil",CPS$MetroArea,sum,na.rm=TRUE))[-1]
sort(tapply(!CPS$Country=="Brazil",CPS$MetroArea,sum,na.rm=TRUE))
sort(tapply(!CPS$Country=="India",CPS$MetroArea,sum,na.rm=TRUE))
sort(tapply(!CPS$Country=="Somalia",CPS$MetroArea,sum,na.rm=TRUE))
sort(tapply(!CPS$Country=="Somalia",CPS$MetroArea,sum,na.rm=TRUE))
sort(tapply(CPS$Country=="Somalia",CPS$MetroArea,sum,na.rm=TRUE))
sort(tapply(CPS$Country=="Brazil",CPS$MetroArea,sum,na.rm=TRUE))
